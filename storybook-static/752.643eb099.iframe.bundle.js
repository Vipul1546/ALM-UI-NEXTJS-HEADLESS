"use strict";(self.webpackChunkalm_boilerplate=self.webpackChunkalm_boilerplate||[]).push([[752],{"./src/components/Container/Container.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),_Container_module_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Container/Container.module.scss"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement,Container=function Container(_ref){var children=_ref.children,width=_ref.width,height=_ref.height,variant=_ref.variant,background=_ref.background;return __jsx("div",{className:"".concat(_Container_module_scss__WEBPACK_IMPORTED_MODULE_1__.Z.container," ").concat(variant),style:{width:width,background:background,height:height}},children)};Container.displayName="Container",Container.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().node.isRequired,width:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,height:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,variant:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,background:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string},Container.defaultProps={width:"100%",height:"100%",variant:"container-block",background:"#ffffff"},Container.__docgenInfo={description:"",methods:[],displayName:"Container",props:{width:{defaultValue:{value:"'100%'",computed:!1},description:"",type:{name:"string"},required:!1},height:{defaultValue:{value:"'100%'",computed:!1},description:"",type:{name:"string"},required:!1},variant:{defaultValue:{value:"'container-block'",computed:!1},description:"",type:{name:"string"},required:!1},background:{defaultValue:{value:"'#ffffff'",computed:!1},description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"node"},required:!0}}},__webpack_exports__.Z=Container},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[4]!./src/components/Container/Container.module.scss":function(module,__webpack_exports__,__webpack_require__){var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'@import"https://fonts.googleapis.com/css2?family=Outfit:wght@200;400;800&display=swap";@import"https://fonts.googleapis.com/css2?family=Outfit:wght@200;400;800&display=swap";.Container_user-is-tabbing__dWRY0 *:focus{outline:.125rem solid #ccc;outline-offset:.25rem;text-decoration:none}.Container_user-is-tabbing__dWRY0 *.Container_active__QdtCs,.Container_user-is-tabbing__dWRY0 *:hover{outline:0}.Container_sr-only__eJPv2{border:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.Container_sr-only-focusable__D1xHR:active,.Container_sr-only-focusable__D1xHR:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.Container_h1__IKLAW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.5rem;font-weight:800;line-height:1.875rem;letter-spacing:0rem}@media(min-width: 768px){.Container_h1__IKLAW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:3.125rem;font-weight:800;line-height:4.125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_h1__IKLAW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:3.5rem;font-weight:800;line-height:4.5rem;letter-spacing:0rem}}.Container_h2__NyYaM{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.25rem;font-weight:800;line-height:1.5rem;letter-spacing:0rem}@media(min-width: 768px){.Container_h2__NyYaM{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.875rem;font-weight:800;line-height:2.8125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_h2__NyYaM{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:2.125rem;font-weight:800;line-height:3.1875rem;letter-spacing:0rem}}.Container_h3__fAnEp{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.125rem;font-weight:800;line-height:1.25rem;letter-spacing:0rem}@media(min-width: 768px){.Container_h3__fAnEp{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.25rem;font-weight:800;line-height:1.625rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_h3__fAnEp{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1.3125rem;font-weight:800;line-height:2rem;letter-spacing:0rem}}.Container_h4__UwexW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}@media(min-width: 768px){.Container_h4__UwexW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1rem;font-weight:normal;line-height:1.3125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_h4__UwexW{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1rem;font-weight:normal;line-height:1.3125rem;letter-spacing:0rem}}.Container_p1__N4OQE{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.875rem;font-weight:normal;line-height:1.25rem;letter-spacing:0rem}@media(min-width: 768px){.Container_p1__N4OQE{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.875rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_p1__N4OQE{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:1rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}}.Container_p2__yVUKJ{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.75rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}@media(min-width: 768px){.Container_p2__yVUKJ{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.875rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_p2__yVUKJ{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.875rem;font-weight:normal;line-height:1.3125rem;letter-spacing:0rem}}.Container_p3__on0g8{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.625rem;font-weight:normal;line-height:.875rem;letter-spacing:0rem}@media(min-width: 768px){.Container_p3__on0g8{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.75rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}}@media(min-width: 1440px){.Container_p3__on0g8{font-family:"Outfit",sans-serif;font-kerning:auto;font-size:.75rem;font-weight:normal;line-height:1.125rem;letter-spacing:0rem}}.Container_cmp-container__TnS6x{padding:0 1rem;width:100%}@media(min-width: 1024px){.Container_cmp-container__TnS6x{padding:0 4.375rem}}@media(min-width: 1440px){.Container_cmp-container__TnS6x{margin:0 auto;max-width:77rem;padding:0}}@media print{.Container_hide-from-print___yJ3h{display:none !important}}.Container_container__jY5v0{display:block}.Container_container__jY5v0.Container_flex__CfRKJ{display:flex}',"",{version:3,sources:["webpack://./src/assets/styles/base/_typography.scss","webpack://./src/assets/styles/base/_a11y.scss","webpack://./src/assets/styles/abstracts/_mixins.scss","webpack://./src/assets/styles/abstracts/_variables.scss","webpack://./src/assets/styles/base/_include-media.scss","webpack://./src/assets/styles/base/_container.scss","webpack://./src/assets/styles/base/_print.scss","webpack://./src/components/Container/Container.module.scss"],names:[],mappings:"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",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Outfit:wght@200;400;800&display=swap\');\n@import "./include-media";\n@import "../abstracts/mixins";\n\n%h1 {\n  @include defaultTypoStyles(24, 0, 30, 800);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(50, 0, 66, 800);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(56, 0, 72, 800);\n  }\n}\n\n%h2 {\n  @include defaultTypoStyles(20, 0, 24, 800);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(30, 0, 45, 800);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(34, 0, 51, 800);\n  }\n}\n\n%h3 {\n  @include defaultTypoStyles(18, 0, 20, 800);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(20, 0, 26, 800);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(21, 0, 32, 800);\n  }\n}\n\n%h4 {\n  @include defaultTypoStyles(16, 0, 18);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(16, 0, 21);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(16, 0, 21);\n  }\n}\n\n%p1 {\n  @include defaultTypoStyles(14, 0, 20);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(14, 0, 18);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(16, 0, 18);\n  }\n}\n\n%p2 {\n  @include defaultTypoStyles(12, 0, 18);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(14, 0, 18);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(14, 0, 21);\n  }\n}\n\n%p3 {\n  @include defaultTypoStyles(10, 0, 14);\n\n  @include media(">=tablet") {\n    @include defaultTypoStyles(12, 0, 18);\n  }\n\n  @include media(">=desktop-lg") {\n    @include defaultTypoStyles(12, 0, 18);\n  }\n}\n\n@mixin h1 {\n  @extend %h1;\n}\n\n@mixin h2 {\n  @extend %h2;\n}\n\n@mixin h3 {\n  @extend %h3;\n}\n\n@mixin h4 {\n  @extend %h4;\n}\n\n@mixin p1 {\n  @extend %p1;\n}\n\n@mixin p2 {\n  @extend %p2;\n}\n\n@mixin p3 {\n  @extend %p3;\n}\n\n.h1 {\n  @include h1;\n}\n\n.h2 {\n  @include h2;\n}\n\n.h3 {\n  @include h3;\n}\n\n.h4 {\n  @include h4;\n}\n\n.p1 {\n  @include p1;\n}\n\n.p2 {\n  @include p2;\n}\n\n.p3 {\n  @include p3;\n}',".user-is-tabbing {\n  *:focus {\n    outline: rem(2) solid #ccc;\n    outline-offset: rem(4);\n    text-decoration: none;\n  }\n\n  *.active,\n  *:hover {\n    outline: 0;\n  }\n}\n\n// Screen Readers\n// -------------------------\n\n.sr-only { @include sr-only; }\n.sr-only-focusable { @include sr-only-focusable; }\n",'@use "sass:math";\n\n$baseFontSize: 16;\n\n@function rem($pixels, $context: $baseFontSize) {\n    @if (unitless($pixels)) {\n        $pixels: $pixels * 1px;\n    }\n\n    @if (unitless($context)) {\n        $context: $context * 1px;\n    }\n\n    @return math.div($pixels, $context) * 1rem;\n}\n\n@mixin defaultTypoStyles($size, $space, $height, $weight: normal, $family: $font-family-primary, $kerning: auto) {\n    font-family: $family;\n    font-kerning: $kerning;\n    font-size: rem($size);\n    font-weight: $weight;\n    line-height: rem($height);\n\n    @if($space==normal) {\n        letter-spacing: normal;\n    }\n\n    @else {\n        letter-spacing: rem($space);\n    }\n}\n\n// Only display content to screen readers. A la Bootstrap 4.\n//\n// See: http://a11yproject.com/posts/how-to-hide-content/\n\n@mixin sr-only {\n    border: 0;\n    clip: rect(0, 0, 0, 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n// Use in conjunction with .sr-only to only display content when it\'s focused.\n//\n// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\n//\n// Credit: HTML5 Boilerplate\n\n@mixin sr-only-focusable {\n\n    &:active,\n    &:focus {\n        clip: auto;\n        height: auto;\n        margin: 0;\n        overflow: visible;\n        position: static;\n        width: auto;\n    }\n}\n\n// Animation mixins\n@mixin keyframes($animation-name) {\n    @keyframes #{$animation-name} {\n        @content;\n    }\n}\n\n\n/**\n*  Fluid typography mixin to create fluid font-size and line hieght for better visusal experience\n*  REference: https://css-tricks.com/snippets/css/fluid-typography/#in-sass\n*/\n@function strip-unit($value) {\n    @return math.div($value, $value * 0 + 1);\n}\n\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size, $min-line-height, $max-line-height) {\n    $u1: unit($min-vw);\n    $u2: unit($max-vw);\n    $u3: unit($min-font-size);\n    $u4: unit($max-font-size);\n    $u5: unit($min-line-height);\n    $u6: unit($max-line-height);\n\n    @if $u1==$u2 and $u1==$u3 and $u1==$u4 and $u1==$u5 and $u1==$u6 {\n\n        @media screen and (min-width: $min-vw) {\n            font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\n            line-height: calc(#{$min-line-height} + #{strip-unit($max-line-height - $min-line-height)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\n        }\n\n        @media screen and (min-width: $max-vw) {\n            font-size: $max-font-size;\n            line-height: $max-line-height;\n        }\n\n    }\n\n}\n\n\n@mixin lineClamp($line-clamp) {\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: $line-clamp;\n    overflow: hidden;\n}',"$font-family-primary: 'Outfit',\nsans-serif;\n\n$font-size-base: 16px;\n$font-weight-regular: 400;\n$font-weight-bold: 800;\n$font-weight-light: 200;\n\n$screen-ph: 360px;\n$screen-tab: 768px;\n$screen-dk: 1024px;\n$screen-dk-md: 1280px;\n$screen-dk-lg: 1440px;\n$screen-dk-xl: 1600px;\n$screen-dk-xxl: 1920px;",'@charset "UTF-8";\n@use "sass:math";\n\n@import "../abstracts/variables";\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | \'_ \\ / __| | | | |/ _` |/ _ \\ | \'_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: (\'phone\': 360px);\n///\n\n$breakpoints: (\n  "phone": $screen-ph,\n  "tablet": $screen-tab,\n  "desktop": $screen-dk,\n  "desktop-md": $screen-dk-md,\n  "desktop-lg": $screen-dk-lg,\n  "desktop-xl": $screen-dk-xl,\n  "desktop-xxl": $screen-dk-xxl\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: (\'screen\': \'screen\');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    \'retina2x\': \'(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)\'\n///  );\n///\n$media-expressions: (\n  "screen": "screen",\n  "print": "print",\n  "handheld": "handheld",\n  "landscape": "(orientation: landscape)",\n  "portrait": "(orientation: portrait)",\n  "retina2x": "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)",\n  "retina3x": "(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)"\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\'>128px\') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\'>20em\') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\'>2.0rem\') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  "px": 1,\n  "em": 0.01,\n  "rem": 0.1,\n  "": 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don\'t support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media(\'>=tablet\') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: \'desktop\';\n///  @include media(\'>=tablet\') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: \'tablet\';\n///  @include media(\'>=desktop\') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: "desktop" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: \'desktop\';\n///  $im-no-media-expressions: (\'screen\');\n///  @include media(\'>=tablet\', \'screen\') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: \'desktop\';\n///  $im-no-media-expressions: (\'screen\');\n///  @include media(\'>=tablet\', \'retina2x\') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ("screen", "portrait", "landscape") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists(\'at-error\')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists("at-error") {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log(\'..\') {}` or `$_: im-log(\'..\')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it\'s much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log("`#{$im-no-media-breakpoint}` is not a valid breakpoint.") {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == "max" and $value <= $no-media-breakpoint-value) or\n        ($prefix == "min" and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in (">=", ">", "<=", "<", "≥", "≤") {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log("No operator found in `#{$expression}`.");\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: "width";\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(("<", "<=", "≤"), $operator), "max", "min");\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log("Unknown unit `#{unit($value)}`.");\n  }\n\n  @if $operator == ">" {\n    $value: $value + $interval;\n  } @else if $operator == "<" {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return "(#{$prefix}-#{$dimension}: #{$value})";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == "number" {\n    @return $value;\n  } @else if type-of($value) != "string" {\n    $_: im-log("Value for `to-number` should be a number or a string.");\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == "-");\n  $numbers: ("0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == "+" or $first-character == "-") {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == ".") {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i)); }\n\n    @if $character == "." {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map-get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ("px": 1px, "cm": 1cm, "mm": 1mm, "%": 1%, "ch": 1ch, "pc": 1pc, "in": 1in, "em": 1em, "rem": 1rem, "pt": 1pt, "ex": 1ex, "vw": 1vw, "vh": 1vh, "vmin": 1vmin, "vmax": 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log("Invalid unit `#{$unit}`.");\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context((\'custom\': 678px)) {\n///    .foo {\n///      @include media(\'>phone\', \'<=custom\') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: (\'all\': \'all\')) {\n///    .foo {\n///      @include media(\'all\', \'>phone\') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context((\'custom\': 678px), (\'all\': \'all\')) {\n///    .foo {\n///      @include media(\'all\', \'>phone\', \'<=custom\') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\'>phone\') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\'>phone\', \'<=tablet\') { }\n///\n/// @example scss - With custom values\n///  @include media(\'>=358px\', \'<850px\') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\'>desktop\', \'<=1350px\') { }\n///\n/// @example scss - With a static expression\n///  @include media(\'retina2x\') { }\n///\n/// @example scss - Mixing everything\n///  @include media(\'>=350px\', \'<tablet\', \'retina3x\') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n','.cmp-container {\n  padding: 0 rem(16px);\n  width: 100%;\n  @include media(">=desktop") {\n    padding: 0 rem(70px);\n  }\n  @include media(">=desktop-lg") {\n    margin: 0 auto;\n    max-width: rem(1232px);\n    padding: 0;\n  }\n}\n',"@media print {\n  .hide-from-print {\n    display: none !important;\n  }\n}\n",'@import "src/assets/styles/main.scss";\n.container {\n  display: block;\n  &.flex {\n    display: flex;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"user-is-tabbing":"Container_user-is-tabbing__dWRY0",active:"Container_active__QdtCs","sr-only":"Container_sr-only__eJPv2","sr-only-focusable":"Container_sr-only-focusable__D1xHR",h1:"Container_h1__IKLAW",h2:"Container_h2__NyYaM",h3:"Container_h3__fAnEp",h4:"Container_h4__UwexW",p1:"Container_p1__N4OQE",p2:"Container_p2__yVUKJ",p3:"Container_p3__on0g8","cmp-container":"Container_cmp-container__TnS6x","hide-from-print":"Container_hide-from-print___yJ3h",container:"Container_container__jY5v0",flex:"Container_flex__CfRKJ"},__webpack_exports__.Z=___CSS_LOADER_EXPORT___},"./src/components/Container/Container.module.scss":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_13_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_resolve_url_loader_index_js_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_13_use_4_Container_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[4]!./src/components/Container/Container.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_13_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_resolve_url_loader_index_js_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_13_use_4_Container_module_scss__WEBPACK_IMPORTED_MODULE_6__.Z,options);__webpack_exports__.Z=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_13_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_resolve_url_loader_index_js_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_13_use_4_Container_module_scss__WEBPACK_IMPORTED_MODULE_6__.Z&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_13_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_resolve_url_loader_index_js_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_13_use_4_Container_module_scss__WEBPACK_IMPORTED_MODULE_6__.Z.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_13_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_resolve_url_loader_index_js_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_13_use_4_Container_module_scss__WEBPACK_IMPORTED_MODULE_6__.Z.locals:void 0}}]);